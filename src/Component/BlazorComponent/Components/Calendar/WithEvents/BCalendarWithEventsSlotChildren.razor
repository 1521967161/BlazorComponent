@namespace BlazorComponent
@typeparam TCalendarWithEvents
@inherits ComponentAbstractBase<TCalendarWithEvents>

@{
    var events = Getter(Day);
    var visuals = Mode(Day, events, Timed, CategoryMode);

    if (Timed)
    {
        foreach (var visual in visuals)
        {
            var mapped = Mapper(visual, Day);
            if(mapped != null)
                @mapped
        }
    }
    else
    {
        var children = new List<RenderFragment>();

        foreach (var visual in visuals)
        {
            while (children.Count < visual.Column)
            {
                children.Add(
                    @<AbstractComponent Metadata="AbstractProvider.GetMetadata(typeof(BCalendarWithEventsPlaceholder<>))" Day="@Day"></AbstractComponent>
                );
            }

            var mapped = Mapper(visual, Day);
            if (mapped != null)
                children.Add(mapped);
        }

        foreach (var child in children)
        {
            @child
        }
    }
}