@namespace BlazorComponent
@inherits BDomComponentBase
@typeparam TItem

<CascadingValue Value="this" TValue="ITable">
    <CascadingValue Value="Align" Name="TableAlign">
        <div class="@CssProvider.GetClass()" style="@CssProvider.GetStyle()" id="@Id" @ref="Ref">
            @TopContent
            <div class="@CssProvider.GetClass("wrap")" @ref="WrapRef" @onscroll="HandleScrollAsync">
                <table style="@CssProvider.GetStyle("table")">
                    @if (Loading)
                    {
                        <AbstractComponent Metadata="AbstractProvider.GetMetadata<BTableLoading>()"></AbstractComponent>
                        <tbody class="@CssProvider.GetClass("empty")">
                        <tr>
                            <td>Loading... Please wait</td>
                        </tr>
                        </tbody>
                    }
                    else
                    {
                        if (!HideDefaultHeader)
                        {
                            <AbstractComponent Metadata="AbstractProvider.GetMetadata<BTableHeader>()"></AbstractComponent>
                        }
                        <tbody>
                        @if (Items == null || Items.Count() == 0)
                        {
                            if (NoResultContent != null)
                            {
                                @NoResultContent
                            }
                            else
                            {
                                <tr>
                                    <td colspan="@Headers.Count" style="text-align:center">No result</td>
                                </tr>
                            }
                        }
                        else
                        {
                            var items = Items.Skip(PageStart - 1).Take(PageSize).ToList();
                            for (var i = 0; i < items.Count; i++)
                            {
                                if (Stripe && i % 2 == 1)
                                {
                                    <tr class="@CssProvider.GetClass("stripe")">
                                        @ChildContent(items[i])
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        @ChildContent(items[i])
                                    </tr>
                                }
                            }
                        }
                        </tbody>
                    }
                </table>
            </div>
            @if (!HideDefaultFooter && Items != null)
            {
                <AbstractComponent Metadata="AbstractProvider.GetMetadata<BTableFooter>()"></AbstractComponent>
            }
            @BottomContent
        </div>
    </CascadingValue>
</CascadingValue>