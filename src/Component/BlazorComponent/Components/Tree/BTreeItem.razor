@namespace BlazorComponent
@inherits BDomComponentBase
@typeparam TItem

@if (RealDisplay)
{
    <CascadingValue Value="this" Name="SelfNode">
        <div @key="NodeId" class="@CssProvider.GetClass()" style="@CssProvider.GetStyle()">
            @for (int i = 0; i < TreeLevel; i++)
            {
                <div class="@CssProvider.GetClass("level")"></div>
            }

            @if (!IsLeaf)
            {
                <button type="button" class="@CssProvider.GetClass("toggle")" @onclick="() => Expanded = !Expanded"></button>
            }
            else
            {
                <div class="@CssProvider.GetClass("level")"></div>
            }

            @if (Checkable)
            {
                <button type="button" class="@CssProvider.GetClass("checkbox")" @onclick="OnCheckBoxClick"></button>
            }

            <div class="@CssProvider.GetClass("content")" @onclick="HandleItemClickAsync">
                @if (PrependContent != null)
                {
                    <div class="@CssProvider.GetClass("prepend")">
                        @PrependContent(DataItem)
                    </div>
                }
                <div class="@CssProvider.GetClass("label")">
                    @Title
                </div>
            </div>
        </div>
    </CascadingValue>
}

<CascadingValue Value="this" Name="Node">
    @if (DataItem != null)
    {
        foreach (var item in ChildDataItems)
        {
            <AbstractComponent DataItem="@item" @key="item.GetHashCode()" Metadata="AbstractProvider.GetMetadata<BTreeItem<TItem>>()"></AbstractComponent>
        }
    }
    else
    {
        @Nodes
    }
</CascadingValue>