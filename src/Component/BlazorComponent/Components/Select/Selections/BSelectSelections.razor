@namespace BlazorComponent
@typeparam TItem
@typeparam TItemValue
@typeparam TValue
@typeparam TInput
@inherits ComponentPartBase<TInput>

<div class="@CssProvider.GetClass("selector")">
    @if (SelectionContent != null)
    {
        for (var i = 0; i < SelectedItems.Count; i++)
        {
            var item = SelectedItems[i];
            var props = new SelectSelectionProps<TItem>(item, i);
            @SelectionContent(props)
        }
    }
    else if (Chips)
    {
        foreach (var item in Text)
        {
            <BChip @attributes="GetAttributes(typeof(BChip))">
                @item
            </BChip>
        }
    }
    else
    {
        for (var i = 0; i < Text.Count(); i++)
        {
            var item = Text.ElementAt(i);
            if (i == Text.Count() - 1)
            {
                <div class="@CssProvider.GetClass("selected")">@item</div>
            }
            else
            {
                <div class="@CssProvider.GetClass("selected")">@($"{item}, ")</div>
            }
        }
    }
    @RenderPart(typeof(BTextFieldInput<,>))
</div>
